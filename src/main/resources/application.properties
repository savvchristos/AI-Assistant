# ? App Identity
spring.application.name=aiassistant

# ?? PostgreSQL Connection
spring.datasource.url=jdbc:postgresql://localhost:5432/ai_assistant_db
spring.datasource.username=springuser
spring.datasource.password=springpass

# ?? JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ? Error Handling
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never
server.error.path=/error

# ? Gemini API Integration
gemini.api.key=AIzaSyDQibUrYSNU-2qs7FpffRZy4qUS9TCrB6I
gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent

# ? Groq LLM Integration
llm.api.key=${GROQ_API_KEY}
llm.api.url=https://api.groq.com/openai/v1/chat/completions
llm.api.model=mixtral-8x7b-32768

# ? Keycloak JWT Issuer URI (Required for JwtDecoder auto-config)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/realms/aiassistant

# ? Force TLS 1.2 for secure HTTPS (Groq requires this)
https.protocols=TLSv1.2